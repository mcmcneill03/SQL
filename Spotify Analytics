I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL.
-
--1. Which 10 songs are the most popular?

SELECT Spotifydata.artist_name, Spotifydata.track_name, Spotifydata.popularity
FROM BIT_DB.Spotifydata
ORDER BY Spotifydata.popularity DESC
LIMIT 10;

--2. Which 5 tracks are the most danceable?

SELECT Spotifydata.artist_name, Spotifydata.track_name, Spotifydata.danceability
FROM BIT_DB.Spotifydata
ORDER BY Spotifydata.danceability DESC
LIMIT 5;

--3. Whatâ€™s the average energy of songs with a popularity of over 85?

SELECT AVG(Spotifydata.energy) AS Average_Energy_Popularity 
FROM BIT_DB.Spotifydata
WHERE Spotifydata.popularity > 85;

--4. Which artists have the highest average popularity (top 5)?

SELECT Spotifydata.artist_name, AVG(Spotifydata.popularity) AS Average_Popularity
FROM BIT_DB.Spotifydata
GROUP BY Spotifydata.artist_name
ORDER BY AVG(Spotifydata.popularity) DESC
LIMIT 5;

--5. Which artists have at least 3 songs and the highest average danceability?

SELECT Spotifydata.artist_name, COUNT(Spotifydata.track_name) AS Number_of_Songs, AVG(Spotifydata.danceability) AS Average_Danceability
FROM BIT_DB.Spotifydata
GROUP BY Spotifydata.artist_name
HAVING Number_of_Songs >= 3
ORDER BY Average_Danceability DESC;
