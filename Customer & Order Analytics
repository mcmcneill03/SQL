--In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

--1. How many orders were placed in January? 
SELECT COUNT(distinct orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID’;

--2. How many of those orders were for an iPhone? 
SELECT COUNT(DISTINCT orderID)
FROM BIT_DB.JanSales
WHERE Product = "iPhone"
AND length(orderID) = 6
AND orderID <> 'Order ID’;

--3. Select the customer account numbers for all the orders that were placed in February. 
SELECT distinct acctnum
FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales
ON customers.order_id = Febsales.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--4. Which product was the cheapest one sold in January, and what was the price?
SELECT DISTINCT Product, MIN(price)
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY price ASC limit 1;

--5. What is the total revenue for each product sold in January?
SELECT Product,SUM(Quantity)*price AS Revenue
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY SUM(Quantity*price) ASC;

--6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, Quantity, SUM(Quantity)*price AS revenue, location
FROM BIT_DB.FebSales
WHERE location = "548 Lincoln St, Seattle, WA 98101"
GROUP BY Product;

--7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers?
SELECT COUNT(distinct customers.acctnum), AVG(Febsales.Quantity*Febsales.price)
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
ON FebSales.orderID = customers.order_id
WHERE Febsales.Quantity > 2
AND length(orderid) = 6
AND orderid <> 'Order ID';

--8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product,SUM(Quantity), location
FROM BIT_DB.FebSales 
WHERE location like '%Los Angeles%'
GROUP BY Product;

